//go:generate wire
//go:build wireinject
// +build wireinject

package server

import (
	"{{ .ModuleName }}/internal/config"
	v1 "{{ .ModuleName }}/internal/handler/v1"
	"{{ .ModuleName }}/internal/repository"
	"{{ .ModuleName }}/internal/router"
	"{{ .ModuleName }}/internal/service"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

var helloSet = wire.NewSet(
	repository.NewHelloRepository,
	service.NewHelloService,
	v1.NewHelloHandler,
)

// InitializeAPI initializes the application server.
// Note: The return signature is changed to *gin.Engine because no providers return an error.
func InitializeAPI(cfg config.Config) *gin.Engine {
	wire.Build(
		// Basic dependencies
		gin.Default,

		// Hello World module set
		helloSet,

		// Router setup
		wire.Struct(new(router.Handlers), "*"),
		router.NewRouter,
	)
	return nil
}